<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lnsf.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.lnsf.bean.Comment" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="comment_type" property="commentType" jdbcType="VARCHAR" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="comment_photo" property="commentPhoto" jdbcType="VARCHAR" />
    <result column="comment_power" property="commentPower" jdbcType="VARCHAR" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="comment_falgs" property="commentFalgs" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="comment_backup" property="commentBackup" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    comment_id, order_id, user_id, comment_type, comment_content, comment_photo, comment_power, 
    reply_id, comment_falgs, create_time, comment_backup
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lnsf.bean.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lnsf.bean.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lnsf.bean.Comment" >
    insert into comment (comment_id, order_id, user_id, 
      comment_type, comment_content, comment_photo, 
      comment_power, reply_id, comment_falgs, 
      create_time, comment_backup)
    values (#{commentId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{commentType,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{commentPhoto,jdbcType=VARCHAR}, 
      #{commentPower,jdbcType=VARCHAR}, #{replyId,jdbcType=INTEGER}, #{commentFalgs,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{commentBackup,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lnsf.bean.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="commentType != null" >
        comment_type,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
      <if test="commentPhoto != null" >
        comment_photo,
      </if>
      <if test="commentPower != null" >
        comment_power,
      </if>
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="commentFalgs != null" >
        comment_falgs,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="commentBackup != null" >
        comment_backup,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentType != null" >
        #{commentType,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentPhoto != null" >
        #{commentPhoto,jdbcType=VARCHAR},
      </if>
      <if test="commentPower != null" >
        #{commentPower,jdbcType=VARCHAR},
      </if>
      <if test="replyId != null" >
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="commentFalgs != null" >
        #{commentFalgs,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentBackup != null" >
        #{commentBackup,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lnsf.bean.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.commentId != null" >
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.commentType != null" >
        comment_type = #{record.commentType,jdbcType=VARCHAR},
      </if>
      <if test="record.commentContent != null" >
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.commentPhoto != null" >
        comment_photo = #{record.commentPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.commentPower != null" >
        comment_power = #{record.commentPower,jdbcType=VARCHAR},
      </if>
      <if test="record.replyId != null" >
        reply_id = #{record.replyId,jdbcType=INTEGER},
      </if>
      <if test="record.commentFalgs != null" >
        comment_falgs = #{record.commentFalgs,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentBackup != null" >
        comment_backup = #{record.commentBackup,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      comment_type = #{record.commentType,jdbcType=VARCHAR},
      comment_content = #{record.commentContent,jdbcType=VARCHAR},
      comment_photo = #{record.commentPhoto,jdbcType=VARCHAR},
      comment_power = #{record.commentPower,jdbcType=VARCHAR},
      reply_id = #{record.replyId,jdbcType=INTEGER},
      comment_falgs = #{record.commentFalgs,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      comment_backup = #{record.commentBackup,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lnsf.bean.Comment" >
    update comment
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentType != null" >
        comment_type = #{commentType,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentPhoto != null" >
        comment_photo = #{commentPhoto,jdbcType=VARCHAR},
      </if>
      <if test="commentPower != null" >
        comment_power = #{commentPower,jdbcType=VARCHAR},
      </if>
      <if test="replyId != null" >
        reply_id = #{replyId,jdbcType=INTEGER},
      </if>
      <if test="commentFalgs != null" >
        comment_falgs = #{commentFalgs,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentBackup != null" >
        comment_backup = #{commentBackup,jdbcType=VARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lnsf.bean.Comment" >
    update comment
    set order_id = #{orderId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      comment_type = #{commentType,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_photo = #{commentPhoto,jdbcType=VARCHAR},
      comment_power = #{commentPower,jdbcType=VARCHAR},
      reply_id = #{replyId,jdbcType=INTEGER},
      comment_falgs = #{commentFalgs,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      comment_backup = #{commentBackup,jdbcType=VARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>